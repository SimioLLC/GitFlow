//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitFlow.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitFlow.Resources.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local repository was already up to date with remote..
        /// </summary>
        internal static string AlreadyUpToDate {
            get {
                return ResourceManager.GetString("AlreadyUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Contecting to remote - Check PAT and URL.
        /// </summary>
        internal static string AuthenticationError {
            get {
                return ResourceManager.GetString("AuthenticationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Connecting to remote - Check PAT and try again in a new folder or remove .git folder from existing folder and try again..
        /// </summary>
        internal static string AuthenticationErrorInit {
            get {
                return ResourceManager.GetString("AuthenticationErrorInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to open a Branch instead of pushing directly to main?.
        /// </summary>
        internal static string BranchInsteadOfMain {
            get {
                return ResourceManager.GetString("BranchInsteadOfMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are on the main Branch, would you like to push to a new development branch instead of directly to the main?.
        /// </summary>
        internal static string BranchUponCommitPushPrompt {
            get {
                return ResourceManager.GetString("BranchUponCommitPushPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a folder that can be used to save builds and is tracked by Git. You can &apos;save as&apos; projects as spfx into this folder with different names and they will be saved alongside the rest of the repository remotely..
        /// </summary>
        internal static string BuildFolderDescription {
            get {
                return ResourceManager.GetString("BuildFolderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads a complete copy of an existing remote repository, including all files and history, to your machine. Syncs your new local repository to the remote cloned repository..
        /// </summary>
        internal static string ButtonDescriptionClone {
            get {
                return ResourceManager.GetString("ButtonDescriptionClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A commit saves a snapshot of your changes locally, and a push uploads those saved changes to a remote server. MUST save before this to ensure all changes are pushed..
        /// </summary>
        internal static string ButtonDescriptionCommitPush {
            get {
                return ResourceManager.GetString("ButtonDescriptionCommitPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLACEHOLDER.
        /// </summary>
        internal static string ButtonDescriptionGitReset {
            get {
                return ResourceManager.GetString("ButtonDescriptionGitReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns a folder on your computer into a Git repository to start tracking file changes. Must be connected to a remote repository..
        /// </summary>
        internal static string ButtonDescriptionInit {
            get {
                return ResourceManager.GetString("ButtonDescriptionInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrates the completed work from current branch into the primary main branch of the project..
        /// </summary>
        internal static string ButtonDescriptionMergeMain {
            get {
                return ResourceManager.GetString("ButtonDescriptionMergeMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Links your local repository to a remote one on a server, enabling you to sync changes..
        /// </summary>
        internal static string ButtonDescriptionOpenRepo {
            get {
                return ResourceManager.GetString("ButtonDescriptionOpenRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Latest Changes: Downloads and merges the newest updates from the shared project into your local copy. Be sure to close and reopen your project for changes to be present..
        /// </summary>
        internal static string ButtonDescriptionPull {
            get {
                return ResourceManager.GetString("ButtonDescriptionPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branch Removal in Git works by removing the branch locally and then pushing that change to the remote repository to remove it there as well. This branch will still be present in other local repositories until deleted..
        /// </summary>
        internal static string ButtonDescriptionRemoveBranch {
            get {
                return ResourceManager.GetString("ButtonDescriptionRemoveBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches your current working context to a different line of development within the repository. Open and close project to see changes..
        /// </summary>
        internal static string ButtonDescriptionSelectBranch {
            get {
                return ResourceManager.GetString("ButtonDescriptionSelectBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clone Repository.
        /// </summary>
        internal static string ButtonLabelClone {
            get {
                return ResourceManager.GetString("ButtonLabelClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit/Push.
        /// </summary>
        internal static string ButtonLabelCommitPush {
            get {
                return ResourceManager.GetString("ButtonLabelCommitPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Reset.
        /// </summary>
        internal static string ButtonLabelGitReset {
            get {
                return ResourceManager.GetString("ButtonLabelGitReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialize Repository.
        /// </summary>
        internal static string ButtonLabelInit {
            get {
                return ResourceManager.GetString("ButtonLabelInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge to Main.
        /// </summary>
        internal static string ButtonLabelMergeMain {
            get {
                return ResourceManager.GetString("ButtonLabelMergeMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Repository.
        /// </summary>
        internal static string ButtonLabelOpenRepo {
            get {
                return ResourceManager.GetString("ButtonLabelOpenRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull.
        /// </summary>
        internal static string ButtonLabelPull {
            get {
                return ResourceManager.GetString("ButtonLabelPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Branch.
        /// </summary>
        internal static string ButtonLabelRemoveBranch {
            get {
                return ResourceManager.GetString("ButtonLabelRemoveBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Branch.
        /// </summary>
        internal static string ButtonLabelSelectBranch {
            get {
                return ResourceManager.GetString("ButtonLabelSelectBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Control.
        /// </summary>
        internal static string CatagoryNameVC {
            get {
                return ResourceManager.GetString("CatagoryNameVC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Error occured while trying to check out the branch due to merge conflics. Make sure you have commited and pushed all changes before selecting a new branch..
        /// </summary>
        internal static string CheckoutWithUncommitedChanges {
            get {
                return ResourceManager.GetString("CheckoutWithUncommitedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination you are trying to clone into is not empty please delete all files contain in this folder or choose a new folder..
        /// </summary>
        internal static string Clonerepodetected {
            get {
                return ResourceManager.GetString("Clonerepodetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! Cloned Repository.
        /// </summary>
        internal static string CloneSuccess {
            get {
                return ResourceManager.GetString("CloneSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first initialize a repository before using this action..
        /// </summary>
        internal static string ConnectRepoBeforeActionError {
            get {
                return ResourceManager.GetString("ConnectRepoBeforeActionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to connect to a repository?.
        /// </summary>
        internal static string ConnectRepoPrompt {
            get {
                return ResourceManager.GetString("ConnectRepoPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are now on the main branch please refresh your project to see changes..
        /// </summary>
        internal static string DeleteNowOnMainMessage {
            get {
                return ResourceManager.GetString("DeleteNowOnMainMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please fill in all fields. - Personal Access Token.
        /// </summary>
        internal static string FieldFillPAT {
            get {
                return ResourceManager.GetString("FieldFillPAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please fill in all fields. - Path.
        /// </summary>
        internal static string FieldFillPath {
            get {
                return ResourceManager.GetString("FieldFillPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please fill in all fields. - URL.
        /// </summary>
        internal static string FieldFillURL {
            get {
                return ResourceManager.GetString("FieldFillURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you selected is not connected to any remote repository. Please select a new folder or a different repository action..
        /// </summary>
        internal static string GitOpenNoGitDetected {
            get {
                return ResourceManager.GetString("GitOpenNoGitDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error in attempting a safe pull during the safe push, indicating there may be conflicts with the remote repository or credential errors, please resolve them before pushing changes..
        /// </summary>
        internal static string GitSafePullErrorDuringSafePush {
            get {
                return ResourceManager.GetString("GitSafePullErrorDuringSafePush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git Actions.
        /// </summary>
        internal static string GroupNameActions {
            get {
                return ResourceManager.GetString("GroupNameActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branch Actions.
        /// </summary>
        internal static string GroupNameBranchingActions {
            get {
                return ResourceManager.GetString("GroupNameBranchingActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository Actions.
        /// </summary>
        internal static string GroupNameRepoActions {
            get {
                return ResourceManager.GetString("GroupNameRepoActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! Initialized Repository and Overrode Remote Repository.
        /// </summary>
        internal static string InitAndOverride {
            get {
                return ResourceManager.GetString("InitAndOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A .git folder was detected in selected destination please delete this .git folder if present or choose a new folder..
        /// </summary>
        internal static string Initrepodetected {
            get {
                return ResourceManager.GetString("Initrepodetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing files were detected on this remote repository, would you like to override the data on the repo with local data, otherwise you may notice some instability with your local version..
        /// </summary>
        internal static string InitWithDetectedFilesPopUp {
            get {
                return ResourceManager.GetString("InitWithDetectedFilesPopUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a removal action are you sure you want to delete all existing files on the remote repository. If just trying to connect to this remote repository you may want to clone into a empty folder on your device..
        /// </summary>
        internal static string InitWithDetectedFilesPopUp2 {
            get {
                return ResourceManager.GetString("InitWithDetectedFilesPopUp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Repository has been reverted to your last commit. Please close and open you project to see changes..
        /// </summary>
        internal static string LocalResetSuccess {
            get {
                return ResourceManager.GetString("LocalResetSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are on the main Branch already.
        /// </summary>
        internal static string MainToMainMergeError {
            get {
                return ResourceManager.GetString("MainToMainMergeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to remove master branch after initializing feel free to ignore..
        /// </summary>
        internal static string MasterBranchRemovalFail {
            get {
                return ResourceManager.GetString("MasterBranchRemovalFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge conflicts were detected. Please resolve them before proceding.
        /// </summary>
        internal static string MergeConflicts {
            get {
                return ResourceManager.GetString("MergeConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully merged current branch into main..
        /// </summary>
        internal static string MergeToMainSuccess {
            get {
                return ResourceManager.GetString("MergeToMainSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first initialize a repository before you can merge to main..
        /// </summary>
        internal static string MustHaveRepoInstanceMerge {
            get {
                return ResourceManager.GetString("MustHaveRepoInstanceMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local repository is up to date..
        /// </summary>
        internal static string NormalPullSuccess {
            get {
                return ResourceManager.GetString("NormalPullSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were conflicts when pulling remote to local repository. Would you like to overwrite you local project with remote?.
        /// </summary>
        internal static string PullForcePromptAfterFailSafePull {
            get {
                return ResourceManager.GetString("PullForcePromptAfterFailSafePull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! Pull was successful..
        /// </summary>
        internal static string PullForceSuccess {
            get {
                return ResourceManager.GetString("PullForceSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to communicate with provided URL.
        /// </summary>
        internal static string RemoteRetrival {
            get {
                return ResourceManager.GetString("RemoteRetrival", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository Opened.
        /// </summary>
        internal static string RepoOpenedSuccess {
            get {
                return ResourceManager.GetString("RepoOpenedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitFlow.
        /// </summary>
        internal static string TabName {
            get {
                return ResourceManager.GetString("TabName", resourceCulture);
            }
        }
    }
}
